using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace DM_assignment_2
{

    class Program
    {
        // Question2)
        public int euclidean__(int x, int y)
        {
            if (x == 0)
            {
                return y;
            }
            else
            {
                return euclidean__(y % x, x);
            }



        }
        //Q3
        public double FASTME_prob(double b, double k, double m)
        {

            return Math.Pow(b, k) * Math.Abs(m);


        }
        static void Main(string[] args)
        {

            Program p = new Program();
            Console.WriteLine("ENTER b");
            double B = int.Parse(Console.ReadLine());
            Console.WriteLine("ENTER K");
            double K = int.Parse(Console.ReadLine());
            Console.WriteLine("ENTER M");
            double M = int.Parse(Console.ReadLine());
            double N = p.FASTME_prob(2, 2, -3);
            Console.WriteLine("ans=" + N);
            Console.WriteLine("!!!!!!!!!!!!!!!!!");





            Console.WriteLine("ENTER VALUE 1");

            int d = int.Parse(Console.ReadLine());
            Console.WriteLine("ENTER VALUE 2");
            int f = int.Parse(Console.ReadLine());

            Console.WriteLine("GCD=" + p.euclidean__(d, f));



            //Question3)
            Console.WriteLine("length of matrix?");
            int m = int.Parse(Console.ReadLine());
            int[] array_1 = new int[m];
            for (int i = 0; i < m; i++)
            {
                Console.WriteLine("enter element of A");
                array_1[i] = int.Parse(Console.ReadLine());
            }


            int[,] array_2 = new int[m, m];
            Console.Write("A=");
            for (int i = 0; i < array_1.Length; i++)
            {
                Console.Write(array_1[i]);
            }
            Console.WriteLine();
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < m; j++)
                {
                    array_2[i, j] = 0;
                }

            }
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < m; j++)
                {
                    Console.Write(array_2[i, j] + " ");
                }

                Console.WriteLine();
            }

            Console.WriteLine("no. of relations?");
            int r = int.Parse(Console.ReadLine());
            int k = 0;
            while (r > k)
            {



                Console.Write("x=");
                int x = int.Parse(Console.ReadLine());
                Console.Write("y=");
                int y = int.Parse(Console.ReadLine());
                if (array_1.Contains(x) && array_1.Contains(y))
                {
                    array_2[x - 1, y - 1] = 1;
                    k++;
                }
                else
                {
                    Console.WriteLine("not a valid function oh!");

                }
                Console.WriteLine();


            }
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < m; j++)
                {
                    Console.Write(array_2[i, j] + " ");
                }

                Console.WriteLine();
            }








            Console.ReadLine();










        }




    }
}

